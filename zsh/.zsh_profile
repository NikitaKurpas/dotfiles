# -------------------------------------------------------------------
# zsh config
# -------------------------------------------------------------------

# fuzzy completion (see https://superuser.com/a/815317)
zstyle ':completion:*' matcher-list '' \
  'm:{a-z\-}={A-Z\_}' \
  'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' \
  'r:|?=** m:{a-z\-}={A-Z\_}'

# Find all keybindings: bindkey | fzf 
# Enter vi mode: ^X^V
# Now all you need to do ESC v, and zsh will launch $VISUAL or $EDITOR,
# allowing you to edit the current command to your hearts content, and 
# once you save & close your editorâ€™s window, ZSH will execute your command.
autoload -U edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

# -------------------------------------------------------------------
# Env exports
# -------------------------------------------------------------------

export XDG_CONFIG_HOME="$HOME/.config"

export WORK_DIR="work"
export PERSONAL_DIR="personal"

export NVM_DIR="$HOME/.nvm"
export DENO_INSTALL="$HOME/.deno"
export GOPATH="$HOME/go"
export DOTFILES="$HOME/.dotfiles"
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export EDITOR='vim'
export SSH_KEY_PATH="$HOME/.ssh/rsa_id"
export DEFAULT_USER="$(whoami)"
export IS_DARK="$(defaults read -g AppleInterfaceStyle 2> /dev/null)"

export PATH="$HOME/.local/bin:$PATH"
[ ! -z "$WORK_DIR" ] && export PATH="$HOME/$WORK_DIR/bin:$PATH"
[ ! -z "$PERSONAL_DIR" ] && export PATH="$HOME/$PERSONAL_DIR/bin:$PATH"

## GNU grep
export PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"

## Ruby from brew
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PATH="$(ruby -e 'puts Gem.bindir'):$PATH"
export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"
export PKG_CONFIG_PATH="/usr/local/opt/ruby/lib/pkgconfig"

# -------------------------------------------------------------------
# Sources
# -------------------------------------------------------------------

# P10k theme
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

[[ -e "$(gem which colorls)" ]] && source $(dirname $(gem which colorls))/tab_complete.sh

# nvm
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# direnv
eval "$(direnv hook zsh)"

# Alacritty theme
if [ -f ~/.alacritty/colors.yml ]; then
  alacritty_light="gruvbox-light"
  alacritty_dark="gruvbox-dark"

  alacritty_theme="${${IS_DARK:+$alacritty_dark}:-$alacritty_light}"
  sed -i "s/colors\:.*/colors: *$alacritty_theme/" ~/.alacritty/colors.yml
fi

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------

bindkey -s ^f "tmux-sessionizer\n"

# -------------------------------------------------------------------
# Aliases
# -------------------------------------------------------------------

alias ll="ls -alh"
colorls_mode="${${IS_DARK:+dark}:-light}"
alias cls="colorls --$colorls_mode"
alias cll="colorls -alh --$colorls_mode"
alias clgs="colorls -Al --gs --sd --$colorls_mode"
alias clr="clear && printf '\e[3J'"
alias print_node_modules='find . -name "node_modules" -type d -prune -print | xargs du -chs'
alias delete_node_modules='find . -name "node_modules" -type d -prune -print -exec rm -rf '{}' \;'
alias ws='webstorm `pwd`'

# -------------------------------------------------------------------
# Functions
# -------------------------------------------------------------------

go_work() {
    cp $HOME/.ssh/id_rsa.work $HOME/.ssh/id_rsa
    cp $HOME/.ssh/id_rsa.pub.work $HOME/.ssh/id_rsa.pub
    eval "$(ssh-agent -s)" 1>/dev/null
}

make_work() {
  git config core.sshCommand 'ssh -i ~/.ssh/id_rsa.work'
  git config user.name "Nikita Kurpas"
  git config user.email "nkurpas@indeed.com"
}

go_personal() {
    cp $HOME/.ssh/id_rsa.personal $HOME/.ssh/id_rsa
    cp $HOME/.ssh/id_rsa.pub.personal $HOME/.ssh/id_rsa.pub
    eval "$(ssh-agent -s)" 1>/dev/null
}

make_personal() {
  git config core.sshCommand 'ssh -i ~/.ssh/id_rsa.personal'
  git config user.name "Nikita Kurpas"
  git config user.email "nikitakurpas@gmail.com"
}

validatey_yaml() {
    python -c 'import yaml,sys;yaml.safe_load(sys.stdin)' < $1
}

wse () {
  webstorm -e "$@"
}

cleanup_branches () {
    git checkout master
    git pull --rebase
    ANYTHING_TO_REMOVE=$(git branch -r --merged | grep -v master | sed 's/origin\///')
    if [[ ( -z "$ANYTHING_TO_REMOVE" ) ]]; then
        echo "No merged remote branches to clean-up."
        return 0
    fi
    git branch -r --merged | grep -v master | sed 's/origin\///' | xargs -n 1 echo git push --delete origin
    if [[ ( -n "$@" ) && ( ( "$@" == "--dry-run" ) || ( "$@" == "-d" ) ) ]];then
        return 0
    fi
    echo 'Enter "DELETE" followed by [ENTER] to perform the above actions.'
    read del
    if [[ ( -z "$del") || ! (  $del == "DELETE" ) ]]; then
        echo "Not performing action..."
        return 0
    fi
    git branch -r --merged | grep -v master | sed 's/origin\///' | xargs -n 1 git push --delete origin
    echo "Branches removed. Pruning local of any references."
    git remote prune origin
}

# Use fd instead of the default find command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow . "$1"
}
